const {VK} = require('vk-io');
const {Keyboard} = require('vk-io');
const vk = new VK();
const {updates} = vk;
const {api} = vk;
const cheerio = require('cheerio')
const request = require('request')
const Intl = require('intl')
const google = require('google')
const webshot = require('webshot')

//–ù–µ —Ç—Ä–æ–≥–∞—Ç—å
const TOKEN = "c6bacea9fa33ad3ba684c4ac9380cb70e650133088eb97919619ee977ae59489b5d142928b837e450cd30"

vk.setOptions({
	token: TOKEN,
	pollingGroupId: 168462227,
	peer_id: 2000000001
})

//–°–≤—è—Ç—ã–Ω—è
require('https').createServer().listen(process.env.PORT || 5000).on('request', function(request, res){
	res.end('')
});




api.baseUrl = 'https://api.vk.com/method/'
updates.startPolling()

//–°–≤—è—Ç—ã–Ω—è 2
updates.use(async (context, next) => {
	if (context.is('message')) {
		const { messagePayload } = context;

		context.state.command = messagePayload && messagePayload.command
			? messagePayload.command
			: null;
	}

	await next();
});

const hearCommand = (name, conditions, handle) => {
	if (typeof handle !== 'function') {
		handle = conditions;
		conditions = [`/${name}`];
	}

	if (!Array.isArray(conditions)) {
		conditions = [conditions];
	}

	updates.hear(
		[
			(text, { state }) => (
				state.command === name
			),
			...conditions
		],
		handle
	);
};


//–ö–æ–º–∞–Ω–¥—ã
vk.updates.hear('/start', async(context) => {
	context.send({
		message: `–ü—Ä–∏–≤–µ—Ç! 
–Ø - –ë–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è 10-–ê –∫–ª–∞—Å—Å–∞ 631 –≥–∏–º–Ω–∞–∑–∏–∏. –ö —á–µ—Ä—Ç—É —ç—Ç—É –ø—Ä–µ–ª—é–¥–∏—é, —è –º–æ–≥—É –µ—â–µ –¥–æ–ª–≥–æ —Ä–∞—Å–ø–∏–Ω–∞—Ç—å—Å—è, –Ω–æ –≤–æ—Ç –º–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
/–¥–∑ - –î–û–ú–ê–®–ö–ê
/lesson - –æ–ø–æ–≤–µ—â–∞–µ—Ç —Ç–µ–±—è, –∫–∞–∫–æ–π —Å–µ–π—á–∞—Å —É—Ä–æ–∫
/—É—Ä–æ–∫–∏ - –ø–æ–ª—É—á–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
/game - –Ω–µ –∑–Ω–∞—é –∑–∞—á–µ–º, –Ω–æ —É –º–µ–Ω—è –µ—Å—Ç—å –∏–≥—Ä—ã (–Ø —Å–∞–º –≤ —à–æ–∫–µ)
/–≥–¥–∑ - –≥—É–≥–ª–∏ –≥–¥–∑ –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø—Ä–∏—Å–ª–∞—Ç—å –µ–≥–æ —Ç–µ–±–µ
/insert - –¥–æ–±–∞–≤–ª—è–π –≤ –±–æ—Ç–∞ –¥–æ–º–∞—à–∫—É, –µ—Å–ª–∏ —Ç—ã –µ–≥–æ –∑–Ω–∞–µ—à—å, –∞ –¥—Ä—É–≥–∏–µ - –Ω–µ—Ç
/insert ? - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /insert
/–æ—Ç–∑—ã–≤ - –Ω–∞–ø–∏—à–∏ –æ—Ç–∑—ã–≤, –∏ –°–∞—à–∞ –µ–≥–æ —É–≤–∏–¥–∏—Ç. –í–ê–ñ–ù–û: –æ—Ç–∑—ã–≤ –∞–Ω–æ–Ω–∏–º–µ–Ω, —á–µ—Å—Ç–Ω–æ–µ —Å–ª–æ–≤–æ
/–∑–∞–≤—Ç—Ä–∞ - —É–∑–Ω–∞–µ—à—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å
/–Ω–µ–¥–µ–ª—è - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é
/help - –º–æ—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è`})
})


hearCommand('game', async (context) => {
	await context.send({
		message: '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∏–≥—Ä',
		keyboard: Keyboard.keyboard([
			[
				Keyboard.textButton({
				label: '–®–∞—Ä –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π',
				payload: {
					command: 'ball'
				},
				color: Keyboard.POSITIVE_COLOR
			}),
                Keyboard.textButton({
				label: '–ß—Ç–æ-—Ç–æ –µ—â–µ...',
				payload: {
					command: 'else'
				},
				color: Keyboard.POSITIVE_COLOR
			})],
                Keyboard.textButton({
				label: '–ó–∞–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É',
				payload: {
					command: 'cancel'
				},
				color: Keyboard.NEGATIVE_COLOR
			})
		],
		{
			oneTime: true
		})
	});
})

hearCommand('ball', async(context) => {
	await context.send('–ö–∞–∫ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –∏–≥—Ä—É? –û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ! –¢—ã –ø–∏—à–µ—à—å "—à–∞–Ωc" –∏ —Å–≤–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –∞ —è –æ—Ç–≤–µ—á–∞—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é.\n–ü—Ä–∏–º–µ—Ä:\n- —à–∞–Ωc, —á—Ç–æ –ú—ã - –¥—Ä—É–∂–Ω—ã–π –∫–ª–∞—Å—Å\n- –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å - 100%') 
	updates.hear(/—à–∞–Ω—Å/i, async(context) => {
	var chances = new Array(6)
  chances[0] = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±–ª–∏–∑–∫–∞ –∫ –Ω—É–ª—é :("
  chances[1] = "–Ø —Å—á–∏—Ç–∞—é, —á—Ç–æ 50 –Ω–∞ 50"
  chances[2] = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å - 100%"
  chances[3] = "–Ø –ø–æ–ª–∞–≥–∞—é, —á—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±–ª–∏–∑–∫–∞ –∫ 100%"
  chances[4] = "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ —à–∞–Ω—Å –µ—Å—Ç—å" 
  chances[5] = "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω—É–ª–µ–≤–∞—è, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–µ–ª–∞—Ç—å"
  var m = chances[Math.floor(Math.random() * chances.length)]
	await context.send(m)
})
})

hearCommand('else', async(context) => {
	await context.send('–†–∞–∑ —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ —É –≤–∞—Å –≤—Å–µ –µ—â–µ –µ—Å—Ç—å, –∑–Ω–∞—á–∏—Ç —è —Å—Ç—Ä–∞–¥–∞—é –æ—Ç –æ—Å—Ç—Ä–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç –≤ –∏–≥—Ä–æ–≤–æ–π —Ñ–æ—Ä–º–µ - –ø–∏—à–∏—Ç–µ –°–∞—à–µ, –æ–Ω —Å–º–æ–∂–µ—Ç :)')
})

hearCommand('cancel', async(context) => {
	await context.send('–•–æ—Ä–æ—à–æ, —è –≤—ã–∫–ª—é—á—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!')
})




const Time = new Date()
var Schedule = new Array(6)
Schedule[0] = new Array(6)
Schedule[0][0] = "1. –ò—Å—Ç–æ—Ä–∏—è üïê 8:30 - 9:10\n"
Schedule[0][1] = "2. –†—É—Å—Å–∫–∏–π üïê 9:20 - 10:00\n"
Schedule[0][2] = "3. –†—É—Å—Å–∫–∏–π üïê 10:15 - 10:55\n"
Schedule[0][3] = "4. –•–∏–º–∏—è üïê 11:15 - 11:55\n"
Schedule[0][4] = "5. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üïê 12:10 - 12:50\n"
Schedule[0][5] = "6. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üïê 13:10 - 13:50\n"

Schedule[1] = new Array(7)
Schedule[1][0] = "1. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ üïê 8:30 - 9:10\n"
Schedule[1][1] = "2. –ë–∏–æ–ª–æ–≥–∏—è üïê 9:20 - 10:00\n"
Schedule[1][2] = "3. –†—É—Å—Å–∫–∏–π üïê 10:15 - 10:55\n"
Schedule[1][3] = "4. –û–±—â–µ—Å—Ç–≤–æ üïê 11:15 - 11:55\n"
Schedule[1][4] = "5. –ê–ª–≥–µ–±—Ä–∞ üïê 12:10 - 12:50\n"
Schedule[1][5] = "6. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞ üïê 13:10 - 13:50\n"
Schedule[1][6] = "7. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞ üïê 14:10 - 14:50\n"

Schedule[2] = new Array(7)
Schedule[2][0] = "1. –ì–µ–æ–º–µ—Ç—Ä–∏—è üïê 8:30 - 9:10\n"
Schedule[2][1] = "2. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üïê 9:20 - 10:00\n"
Schedule[2][2] = "3. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üïê 10:15 - 10:55\n"
Schedule[2][3] = "4. –ú–•–ö üïê 11:15 - 11:55\n"
Schedule[2][4] = "5. –§–∏–∑–∏–∫–∞ üïê 12:10 - 12:50\n"
Schedule[2][5] = "6. –ù–µ–º–µ—Ü–∫–∏–π/–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π üïê 13:10 - 13:50\n"
Schedule[2][6] = "7. –≠–ª–µ–∫—Ç–∏–≤ üïê 14:10 - 14:50\n"

Schedule[3] = new Array(6)
Schedule[3][0] = "1. –°–û–ù üïê –î–æ 9:20\n"
Schedule[3][1] = "2. –§–∏–∑–∏–∫–∞ üïê 9:20 - 10:00\n"
Schedule[3][2] = "3. –ò–Ω—Ñ–∞ üïê 10:15 - 10:55\n"
Schedule[3][3] = "4. –ê–ª–≥–µ–±—Ä–∞ üïê 11:15 - 11:55\n"
Schedule[3][4] = "5. –ò—Å—Ç–æ—Ä–∏—è üïê 12:10 - 12:50\n"
Schedule[3][5] = "6. –ò—Å—Ç–æ—Ä–∏—è üïê 13:10 - 13:50\n"


Schedule[4] = new Array(6)
Schedule[4][0] = "1. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è üïê 8:30 - 9:10\n"
Schedule[4][1] = "2. –≠–ª–µ–∫—Ç–∏–≤ üïê 9:20 - 10:00\n"
Schedule[4][2] = "3. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ üïê 10:15 - 10:55\n"
Schedule[4][3] = "4. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ üïê 11:15 - 11:55\n"
Schedule[4][4] = "5. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üïê 12:10 - 12:50\n"
Schedule[4][5] = "6. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üïê 13:10 - 13:50\n"

Schedule[5] = new Array(6)
Schedule[5][0] = "1. –ì–µ–æ–º–µ—Ç—Ä–∏—è üïê 8:30 - 9:10\n"
Schedule[5][1] = "2. –û–±—â–µ—Å—Ç–≤–æ üïê 9:20 - 10:00\n"
Schedule[5][2] = "3. –û–ë–ñ üïê 10:15 - 10:55\n"
Schedule[5][3] = "4. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞ üïê 11:15 - 11:55\n"
Schedule[5][4] = "5. –ù–µ–º–µ—Ü–∫–∏–π/—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π üïê 12:10 - 12:50\n"
Schedule[5][5] = "6. –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞-—ç–ª–µ–∫—Ç–∏–≤ üïê 13:10 - 13:50\n"


updates.hear('/–∑–∞–≤—Ç—Ä–∞', async(context) => {
	if(Time.getDay() === 1)
	{
		await context.send(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n ${Schedule[1].join(' ')}`)
	}
	if(Time.getDay() === 2)
	{
		await context.send(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n ${Schedule[2].join(' ')}`)
	}
	if(Time.getDay() === 3)
	{
		await context.send(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n ${Schedule[3].join(' ')}`)
	}
	if(Time.getDay() === 4)
	{
		await context.send(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n ${Schedule[4].join(' ')}`)
	}
	if(Time.getDay() === 5)
	{
		await context.send(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n ${Schedule[5].join(' ')}`)
	}
	if(Time.getDay() === 6)
	{
		await context.send(`–ó–∞–≤—Ç—Ä–∞ –Ω–µ—É—á–µ–±–Ω—ã–π –¥–µ–Ω—å - –∫–∞–π—Ñ—É–π—Ç–µ`)
	}
	if(Time.getDay() === 0)
	{
		await context.send(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n ${Schedule[0].join(' ')}`)
	}
})


const newDay = new Date()
var greeting = new Array(4)
greeting[0] = "–ò—Ç–∞–∫, –º–æ–∏ –¥–æ—Ä–æ–≥–∏–µ, –Ω–∞—á–∞–ª—Å—è –Ω–æ–≤—ã–π —É—á–µ–±–Ω—ã–π –¥–µ–Ω—å. –Ø –∂–µ–ª–∞—é –≤–∞–º –≤—Å–µ–º —Ö–æ—Ä–æ—à–∏—Ö –æ—Ü–µ–Ω–æ–∫ –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º, —É–¥–∞—á–∏ :)\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
greeting[1] = "–ò —Å–Ω–æ–≤–∞ –≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç–∏–∫, –≥–æ—Å–ø–æ–¥–∞. –°–∫—É—á–∞–ª–∏? –Ø –∑–Ω–∞—é, —á—Ç–æ –Ω–µ—Ç. –í–æ—Ç –≤–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n"
greeting[2] = "–®–∞–ª–æ–º, –¥–∞–º—ã –∏ –ø–∞—Ü–∞–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –º–æ–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –≤–∞–º –Ω–∞–¥–æ–µ–ª–∏, –Ω–æ —è –Ω–∏—á–µ–≥–æ –ø–æ–¥–µ–ª–∞—Ç—å –Ω–µ –º–æ–≥—É - —è —Å–æ–∑–¥–∞–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á. –ö—Å—Ç–∞—Ç–∏, –≤–æ—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n"
greeting[3] = "–ü—Ä–∏–≤–µ—Ç. –ë–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤. –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
var random_greeting = greeting[Math.floor(Math.random() * greeting.length)]
if(newDay.getHours() === 8 && newDay.getMinutes() === 0) 
{
	if(newDay.getDay() === 1)
	{
		api.messages.send({
			message: random_greeting + Schedule[0],
			peer_id: 2000000001
		})
	}
	if(newDay.getDay() === 2)
	{
		api.messages.send({
			message: random_greeting + Schedule[1],
			peer_id: 2000000001
		})
	}
	if(newDay.getDay() === 3)
	{
		api.messages.send({
			message: random_greeting + Schedule[2],
			peer_id: 2000000001
		})
	}
	if(newDay.getDay() === 4)
	{
		api.messages.send({
			message: random_greeting + Schedule[3],
			peer_id: 2000000001
		})	
	}
	if(newDay.getDay() === 5)
	{
		api.messages.send({
			message: random_greeting + Schedule[4],
			peer_id: 2000000001
		})
	}
	if(newDay.getDay() === 6)
	{
		api.messages.send({
			message: random_greeting + Schedule[5],
			peer_id: 2000000001
		})
	}
}



updates.hear('/lesson', async(context) => {
	//–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫
	for(i = 30; i < 59; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][0])
		}
		break
	}
	for(i = 0; i < 10; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][0])
		}
		break
	}


	//–í—Ç–æ—Ä–æ–π —É—Ä–æ–∫
	for(i = 20; i < 59; i++)
	{
		if(Time.getHours() === 9 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][1])
		}
		break
	}
	while(i = 0)
	{
		if(Time.getHours() === 9 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][1])
		}
		break
	}


	//–¢—Ä–µ—Ç–∏–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 10 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][2])
		}
		break
	}


	//–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 11 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][3])
		}
		break
	}


	//–ü—è—Ç—ã–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 12 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][4])
		}
		break
	}


	//–®–µ—Å—Ç–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 13 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][5])
		}
		break
	}


	//–°–µ–¥—å–º–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 14 & Time.getDay() === 1 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[0][6])
		}
		break
	}





	//–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫
	for(i = 30; i < 59; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][0])
		}
		break
	}
	for(i = 0; i < 10; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][0])
		}
		break
	}


	//–í—Ç–æ—Ä–æ–π —É—Ä–æ–∫
	for(i = 20; i < 59; i++)
	{
		if(Time.getHours() === 9 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][1])
		}
		break
	}
	while(i = 0)
	{
		if(Time.getHours() === 9 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][1])
		}
		break
	}


	//–¢—Ä–µ—Ç–∏–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 10 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][2])
		}
		break
	}


	//–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 11 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][3])
		}
		break
	}


	//–ü—è—Ç—ã–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 12 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][4])
		}
		break
	}


	//–®–µ—Å—Ç–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 13 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][5])
		}
		break
	}


	//–°–µ–¥—å–º–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 14 & Time.getDay() === 2 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[1][6])
		}
		break
	}

	



	//–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫
	for(i = 30; i < 59; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][0])
		}
		break
	}
	for(i = 0; i < 10; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][0])
		}
		break
	}


	//–í—Ç–æ—Ä–æ–π —É—Ä–æ–∫
	for(i = 20; i < 59; i++)
	{
		if(Time.getHours() === 9 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][1])
		}
		break
	}
	while(i = 0)
	{
		if(Time.getHours() === 9 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][1])
		}
		break
	}


	//–¢—Ä–µ—Ç–∏–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 10 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][2])
		}
		break
	}


	//–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 11 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][3])
		}
		break
	}


	//–ü—è—Ç—ã–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 12 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][4])
		}
		break
	}


	//–®–µ—Å—Ç–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 13 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][5])
		}
		break
	}


	//–°–µ–¥—å–º–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 14 & Time.getDay() === 3 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[2][6])
		}
		break
	}


	//–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫
	for(i = 30; i < 59; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][0])
		}
		break
	}
	for(i = 0; i < 10; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][0])
		}
		break
	}


	//–í—Ç–æ—Ä–æ–π —É—Ä–æ–∫
	for(i = 20; i < 59; i++)
	{
		if(Time.getHours() === 9 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][1])
		}
		break
	}
	while(i = 0)
	{
		if(Time.getHours() === 9 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][1])
		}
		break
	}


	//–¢—Ä–µ—Ç–∏–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 10 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][2])
		}
		break
	}


	//–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 11 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][3])
		}
		break
	}


	//–ü—è—Ç—ã–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 12 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][4])
		}
		break
	}


	//–®–µ—Å—Ç–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 13 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][5])
		}
		break
	}


	//–°–µ–¥—å–º–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 14 & Time.getDay() === 4 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[3][6])
		}
		break
	}





	//–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫
	for(i = 30; i < 59; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][0])
		}
		break
	}
	for(i = 0; i < 10; i++)
	{
		if(Time.getHours() === 8 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][0])
		}
		break
	}


	//–í—Ç–æ—Ä–æ–π —É—Ä–æ–∫
	for(i = 20; i < 59; i++)
	{
		if(Time.getHours() === 9 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][1])
		}
		break
	}
	while(i = 0)
	{
		if(Time.getHours() === 9 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][1])
		}
		break
	}


	//–¢—Ä–µ—Ç–∏–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 10 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][2])
		}
		break
	}


	//–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–∫
	for(i = 15; i < 55; i++)
	{
		if(Time.getHours() === 11 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][3])
		}
		break
	}


	//–ü—è—Ç—ã–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 12 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][4])
		}
		break
	}


	//–®–µ—Å—Ç–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 13 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][5])
		}
		break
	}


	//–°–µ–¥—å–º–æ–π —É—Ä–æ–∫
	for(i = 10; i < 50; i++)
	{
		if(Time.getHours() === 14 & Time.getDay() === 5 & Time.getMinutes(i)) 
		{
			context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[4][6])
		}
		break
	}


//–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫
for(i = 30; i < 59; i++)
{
	if(Time.getHours() === 8 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][0])
	}
	break
}
for(i = 0; i < 10; i++)
{
	if(Time.getHours() === 8 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][0])
	}
	break
}


//–í—Ç–æ—Ä–æ–π —É—Ä–æ–∫
for(i = 20; i < 59; i++)
{
	if(Time.getHours() === 9 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][1])
	}
	break
}
while(i = 0)
{
	if(Time.getHours() === 9 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][1])
	}
	break
}


//–¢—Ä–µ—Ç–∏–π —É—Ä–æ–∫
for(i = 15; i < 55; i++)
{
	if(Time.getHours() === 10 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][2])
	}
	break
}


//–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–∫
for(i = 15; i < 55; i++)
{
	if(Time.getHours() === 11 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][3])
	}
	break
}


//–ü—è—Ç—ã–π —É—Ä–æ–∫
for(i = 10; i < 50; i++)
{
	if(Time.getHours() === 12 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][4])
	}
	break
}


//–®–µ—Å—Ç–æ–π —É—Ä–æ–∫
for(i = 10; i < 50; i++)
{
	if(Time.getHours() === 13 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][5])
	}
	break
}


//–°–µ–¥—å–º–æ–π —É—Ä–æ–∫
for(i = 10; i < 50; i++)
{
	if(Time.getHours() === 14 & Time.getDay() === 6 & Time.getMinutes(i)) 
	{
		context.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç ' + Schedule[5][6])
	}
	break
}

await context.send('–°–µ–π—á–∞—Å —É—Ä–æ–∫–∞ –Ω–µ—Ç. –£—Ä–∞–∞–∞–∞–∞–∞!')
})


updates.hear('/—É—Ä–æ–∫–∏', async(context) => {
	if(Time.getDay() === 1)
	{
		await context.send('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n' + Schedule[0].join(' '))
	}
	if(Time.getDay() === 2)
	{
		await context.send('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n' + Schedule[1].join(' '))
	}
	if(Time.getDay() === 3)
	{
		await context.send('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n' + Schedule[2].join(' '))
	}
	if(Time.getDay() === 4)
	{
		await context.send('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n' + Schedule[3].join(' '))
	}
	if(Time.getDay() === 5)
	{
		await context.send('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n' + Schedule[4].join(' '))
	}
	if(Time.getDay() === 6)
	{
		await context.send('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n' + Schedule[5].join(' '))
	}
})


const url = 'https://github.com/FloydReme/bot631/blob/master/domashka.txt'
request(url, async function(error, Response, body) {
	const $ = cheerio.load(body)
	const Englishdz = $('#LC2').text()
	const Russiandz = $('#LC4').text()
	const Literaturedz=  $('#LC6').text()
	const Germandz = $('#LC8').text()
	const Frenchdz = $('#LC10').text()
	const Algebradz = $('#LC12').text()
	const Geometrydz = $('#LC14').text()
	const Biologydz = $('#LC16').text()
	const Physicsdz = $('#LC18').text()
	const Chemistrydz = $('#LC20').text()
	const CompSciencedz= $('#LC22').text()
	const Geographydz = $('#LC24').text()
	const Mhkdz = $('#LC26').text()
	const History_dz = $('#LC28').text()
	const Societydz = $('#LC30').text()
	const OBJdz = $('#LC32').text()

	const English = $('#LC1').text()
	const Russian = $('#LC3').text()
	const Literature=  $('#LC5').text()
	const German = $('#LC7').text()
	const French = $('#LC9').text()
	const Algebra = $('#LC11').text()
	const Geometry = $('#LC13').text()
	const Biology = $('#LC15').text()
	const Physics = $('#LC17').text()
	const Chemistry = $('#LC19').text()
	const CompScience = $('#LC21').text()
	const Geography = $('#LC23').text()
	const Mhk = $('#LC25').text()
	const History_ = $('#LC27').text()
	const Society = $('#LC29').text()
	const OBJ = $('#LC31').text()

	const Monday = new Array(4)
	Monday[0] = History_ + History_dz
	Monday[1] = Russian + Russiandz
	Monday[2] = Chemistry + Chemistrydz
	Monday[3] = English + Englishdz

	const Tuesday = new Array(5)
	Tuesday[0] = Literature + Literaturedz
	Tuesday[1] = Biology + Biologydz
	Tuesday[2] = Russian + Russiandz
	Tuesday[3] = Society + Societydz
	Tuesday[4] = Algebra + Algebradz

	const Wednesday = new Array(5)
	Wednesday[0] = Geometry + Geometrydz
	Wednesday[1] = English + Englishdz
	Wednesday[2] = Mhk + Mhkdz
	Wednesday[3] = Physics + Physicsdz
	Wednesday[4] = French + Frenchdz

	const Thursday = new Array(4)
	Thursday[0] = Physics + Physicsdz
	Thursday[1] = CompScience + CompSciencedz
	Thursday[2] = Algebra + Algebradz
	Thursday[3] = History_ + History_dz


	const Friday = new Array(3)
	Friday[0] = Geography + Geographydz
	Friday[1] = Literature + Literaturedz
	Friday[2] = English + Englishdz

	const Saturday = new Array(5)
	Saturday[0] = Geometry + Geometrydz
	Saturday[1] = Society + Societydz
	Saturday[2] = OBJ + OBJdz
	Saturday[3] = French + Frenchdz
	Saturday[4] = Algebra + Algebradz

	const Sunday = new Array(16)
	Sunday[0] = English + Englishdz
	Sunday[1] = Russian + Russiandz
	Sunday[2] = Literature + Literaturedz
	Sunday[3] = History_ + History_dz
	Sunday[4] = CompScience + CompSciencedz
	Sunday[5] = Biology + Biologydz
	Sunday[6] = Algebra + Algebradz
	Sunday[7] = Geography + Geographydz
	Sunday[8] = Geometry + Geometrydz
	Sunday[9] = Society + Societydz
	Sunday[10] = Chemistry + Chemistrydz
	Sunday[11] = Physics + Physicsdz
	Sunday[12] = Mhk + Mhkdz
	Sunday[13] = French + Frenchdz
	Sunday[14] = German + Germandz
	Sunday[15] = OBJ + OBJdz


updates.hear(/^\/insert (.+) (.+)/i, async(context) => {
	const Subject = new RegExp(context.$match[1],'i') 
	const homeWork = context.$match[2]
	const subjects = []
	$('td').each(function(i, elem) {
		subjects[i] = $(this).text();
	});

	for(var j = 0; j < subjects.length; j++)
	{
		if(subjects[j].match(Subject))
		{
			context.send(`–í–∞—à –ø—Ä–µ–¥–º–µ—Ç: ${subjects[j]}
			–í–∞—à–µ –¥–∑: ${homeWork}`)
		}
	}
})



updates.hear('/insert ?', async(context) => {
	await context.send(`
–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /insert.
–û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ (–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –°–∞—à–∞ –Ω–µ —Ö–æ—á–µ—Ç –≤—Å–µ –≤–≤–æ–¥–∏—Ç—å –≤—Ä—É—á–Ω—É—é, –ø—Ä–æ—Ü–µ—Å—Å –Ω—É–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å)
–ò—Ç–∞–∫, –∫–∞–∫ –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç?
–í—ã –ø–∏—à–∏—Ç–µ: /insert –Ω–∞–∑–≤–∞–Ω–∏–µ_–ø—Ä–µ–¥–º–µ—Ç–∞ —Å–∞–º–∞_–¥–æ–º–∞—à–∫–∞
–ó–∞—Ç–µ–º –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –¥–∑ –ø–æ –≤–∞—à–µ–º—É –ø—Ä–µ–¥–º–µ—Ç—É, –∏ –≤—Å–µ –±—É–¥—É—Ç —Å—á–∞—Å—Ç–ª–∏–≤—ã!
–í—Å–µ–º –º–∏—Ä`)
})

updates.hear('/–¥–∑ –≤—Å–µ', async(context) =>{
	await context.send(Sunday.join('\n'))
})

updates.hear('/–¥–∑', async(context) => {
	if(Time.getDay() === 1)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Monday.join('\n')
		await context.send('–î–æ–º–∞—à–∫–∞ —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ ' + formatter.format(Time) + ' \n'  + x)
	}
	if(Time.getDay() === 2)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Tuesday.join('\n')
		await context.send('–î–æ–º–∞—à–∫–∞ —Å–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞ '+ formatter.format(Time) + ' \n'  + x)
	}
	if(Time.getDay() === 3)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Wednesday.join('\n')
		await context.send('–î–æ–º–∞—à–∫–∞ —Å–æ —Å—Ä–µ–¥—ã '+ formatter.format(Time) + ' \n'  + x)
	}
	if(Time.getDay() === 4)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Thursday.join('\n')
		await context.send('–î–æ–º–∞—à–∫–∞ —Å —á–µ—Ç–≤–µ—Ä–≥–∞ '+ formatter.format(Time) + ' \n' + x)
	}
	if(Time.getDay() === 5)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Friday.join('\n')
		await context.send('–î–æ–º–∞—à–∫–∞ —Å –ø—è—Ç–Ω–∏—Ü—ã '+ formatter.format(Time) + ' \n'  + x)
	}
	if(Time.getDay() === 6)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Saturday.join('\n')
		await context.send('–î–æ–º–∞—à–∫–∞ —Å —Å—É–±–±–æ—Ç—ã ' + formatter.format(Time) + ' \n' + x)
	}
	if(Time.getDay() === 0)
	{
		var formatter = new Intl.DateTimeFormat("ru", {
			month: "long",
			day: "numeric"
		  });
		const x = Sunday.join('\n')
		await context.send('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã—Ö–æ–¥–Ω—ã–º. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –µ–≥–æ —Å –ø–æ–ª—å–∑–æ–π. –î–æ–º–∞—à–∫–∞ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é: ' + formatter.format(Time) + ' \n'  + x)
	}})
})

updates.hear('/help', async(context) => {
	await context.send(`–ò—Ç–∞–∫, –≤–æ—Ç –≤–∞–º –±–æ–ª–µ–µ-–º–µ–Ω–µ–µ –∫—Ä–∞—Ç–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.
–ú–æ–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥: https://github.com/FloydReme/bot631
	
–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –º–æ–∏–º –∫–æ–º–∞–Ω–¥–∞–º: /start

–û—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–∑–≤–∞–Ω—ã —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏. –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ü—Ä–æ—Å—Ç–æ! 
–Ø –¥–µ–ª–∞—é —Ç—Ä–∏–≥–≥–µ—Ä –Ω–∞ —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ —Å–ª–æ–≤–æ, –∞ –±–æ—Ç –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—á–∞–µ—Ç.

–ö–ê–ö –†–ê–ë–û–¢–ê–ï–¢ /–≥–¥–∑:
–í—ã –ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/–≥–¥–∑" –∏ —Å–ª–µ–¥–æ–º —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏. –ü—Ä–∏–º–µ—Ä:
/–≥–¥–∑ –ò–∑ –¥–≤—É—Ö –≥–æ—Ä–æ–¥–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –¥—Ä—É–≥ –¥—Ä—É–≥—É –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –¥–≤–∞ –ø–æ–µ–∑–¥–∞. 

–°–æ –≤—Ä–µ–º–µ–Ω–µ–º –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –≤—ã –æ–± —ç—Ç–æ–º –º–µ–Ω—è –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∏ –µ—Å–ª–∏ –≤ —ç—Ç–æ–º –±—É–¥–µ—Ç –≤–æ–æ–±—â–µ –≤—Å—è–∫–∏–π —Å–º—ã—Å–ª`)
})

updates.hear(/^\/–≥–¥–∑ (.+)/i, async (context) => {
	const textUser = context.$match[1];
	google.resultsPerPage = 3;
	context.send('–Ø –Ω–∞—à–µ–ª —Ç—É—Ç –ø–∞—Ä—É –ì–î–ó –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É, –≥–ª—è–Ω—å –∏—Ö:')
	google(textUser, function (error) {
    const settings = {
	    streamType: 'png',
		windowSize: {
			width: '1000',
			height: '1400'
		},
		shotSize: {
			width: '1000',
			height: '1400'
		},
		userAgent: 'Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_2 like Mac OS X; en-us)' + ' AppleWebKit/531.21.20 (KHTML, like Gecko) Mobile/7B298g'
		}

		const link1 = res.links[0]
        const link2 = res.links[1]
        const link3 = res.links[2]
		
		Promise.all([
		webshot(link1.href, 'images/GDZ1.png', settings, function(error) 
		{
			context.send('–ì–î–ó –Ω–æ–º–µ—Ä 1:\n' + link1.href)
			context.sendPhoto('images/GDZ1.png')
			if(error)
		{
			context.send('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —É –º–µ–Ω—è —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ :—Å')
		}
		}),
		webshot(link2.href, 'images/GDZ2.png', settings, function(error) 
		{
			context.send('–ì–î–ó –Ω–æ–º–µ—Ä 2:\n' + link2.href) 
			context.sendPhoto('images/GDZ2.png')
			if(error)
		{
			context.send('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —É –º–µ–Ω—è —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ :—Å')
		}
		}),
		webshot(link3.href, 'images/GDZ3.png', settings, function(error) 
		{
			context.send('–ì–î–ó –Ω–æ–º–µ—Ä 3:\n' + link3.href)
			context.sendPhoto('images/GDZ3.png')
			if(error)
		{
			context.send('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —É –º–µ–Ω—è —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ :—Å')
		}
		})
		])
		if(error)
		{
			context.send('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —É –º–µ–Ω—è —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ :—Å')
		}
	})
})


updates.hear(/^\/–æ—Ç–∑—ã–≤ (.+)/i, async(context) => {
	const feedback = context.$match[1]
	await context.send('–•–æ—Ä–æ—à–æ, —Ç–≤–æ–π –æ—Ç–∑—ã–≤ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –°–∞—à–µ, —Å–ø–∞—Å–∏–±–æ :)')
	api.messages.send({
		message: '–ù–û–í–´–ô –û–¢–ó–´–í: ' + feedback,
		domain: 'egoromanov'
	})
})


updates.hear('/–Ω–µ–¥–µ–ª—è', async(context) => {
	await context.send(`–†–ê–°–ü–ò–°–ê–ù–ò–ï –ù–ê –í–°–Æ –ù–ï–î–ï–õ–Æ:
–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö:
${Schedule[0].join(' ')}

–í–¢–û–†–ù–ò–ö:
${Schedule[1].join(' ')}

–°–†–ï–î–ê:
${Schedule[2].join(' ')}

–ß–ï–¢–í–ï–†–ì:
${Schedule[3].join(' ')}

–ü–Ø–¢–ù–ò–¶–ê:
${Schedule[4].join(' ')}

–°–£–ë–ë–û–¢–ê:
${Schedule[5].join(' ')}`)
})

/*const reg1 = new Array(17)
reg1[0] = new RegExp(/–º—è–∫–∏—à/i)
reg1[1] = new RegExp(/–º—è–∫–∏—à—É/i)
reg1[2] = new RegExp(/–º—è–∫–∏—à–µ/i)
reg1[3] = new RegExp(/–º—è–∫–∏—à–∞/)
reg1[4] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ—à/i)
reg1[5] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ—à/i)
reg1[6] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ—à–∞/i)
reg1[7] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ—à–∞/i)
reg1[8] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ—à–∞/i)
reg1[9] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ—à—É/i)
reg1[10] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ—à–µ/i)
reg1[11] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ—à–∞/i)
reg1[12] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ—à—É/i)
reg1[13] = new RegExp(/–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ—à–µ/i)
reg1[14] = new RegExp(/–º–∏—Ä–æ—à/i)
reg1[15] = new RegExp(/–º–∏—Ä–æ—à—É/i)
reg1[16] = new RegExp(/–º–∏–∫—Ä–æ–º—è—à/i)

const answers1 = new Array(4)
answers1[0] = "–ì–æ–≤–Ω–æ–∫–æ–¥–µ—Ä–∞ –≤—ã–∑—ã–≤–∞–ª–∏? („Å£‡≤†‚Äø‡≤†)„Å£"
answers1[1] = "–ï—Å–ª–∏ —Ç—ã —Ä—É–≥–∞–µ—à—å –ú–∏—Ä–æ—à–∞, —Ç–æ —Ç—ã –ø–∏–¥–æ—Ä ( Õ°¬∞ Õú ñ Õ°¬∞)"
answers1[2] = "–¢—ã —á—Ç–æ-—Ç–æ –ø—Ä–æ—Ç–∏–≤ –º–µ–Ω—è –∏–º–µ–µ—à—å? –ì–æ —Ä–∞–∑ –Ω–∞ —Ä–∞–∑ –≤—ã–π–¥–µ–º, –∞ –Ω–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –±–∞–∑–∞—Ä—å (ÔæíÔø£‚ñΩÔø£)Ô∏ª‚î≥‚ïê‰∏Ä "
answers1[3] = "–Ø —Ö–æ—Ä–æ—à —Å–æ–±–æ–π, –∏ –≤—ã —ç—Ç–æ –∑–Ω–∞–µ—Ç–µ ( ò Õú ñ  ò)"
const random1 = answers1[Math.floor(Math.random() * answers1.length)]
updates.hear(reg1, async(context) => {
	await context.send(random1)
})*/

const reg2 = new Array(10)
reg2[0] = new RegExp(/–≥–∞–Ω—Ü/i)
reg2[1] = new RegExp(/–≥–∞–Ω—Ü–∞/i)
reg2[2] = new RegExp(/–≥–∞–Ω—Ü—É/i)
reg2[3] = new RegExp(/–≥–∞–Ω—Ü–µ/i)
reg2[4] = new RegExp(/–≥–∞–Ω—Ü–µ–º/i)
reg2[5] = new RegExp(/–±–æ–≥–¥–∞–Ω/i)
reg2[6] = new RegExp(/–±–æ–≥–¥–∞–Ω—É/i)
reg2[7] = new RegExp(/–±–æ–≥–¥–∞–Ω–∞/i)
reg2[8] = new RegExp(/–±–æ–≥–¥–∞–Ω–æ–º/i)
reg2[9] = new RegExp(/–±–æ–≥–¥–∞–Ω–µ/i)
const answers2 = new Array(3)
answers2[0] = "Ruhm der Ukraine"
answers2[1] = "Bogdan ist der Sinn des Lebens"
answers2[2] = "der beste Mann Kappa"
const random2 = answers2[Math.floor(Math.random() * answers2.length)]
updates.hear(reg2, async(context) => {
	await context.send(random2)
})

/*updates.hear(/—Å–ø–∞—Å–∏–±–æ/i, async(context) => {
	await context.send('–ù–µ –∑–∞ —á—Ç–æ! –†–∞–¥ –ø–æ–º–æ—á—å')
})*/


const reg3 = new Array(18)
reg3[0] = new RegExp(/–Ω–æ–≤–æ—Å–µ–ª—å—Ü–µ–≤/i)
reg3[1] = new RegExp(/–Ω–æ–≤–æ—Å/i)
reg3[2] = new RegExp(/–Ω–∞–≤–æ—Å/i)
reg3[3] = new RegExp(/–Ω–∞–≤–æ–∑/i)
reg3[4] = new RegExp(/–Ω–æ–≤–æ—Å–µ–ª—å—Ü–µ–≤–∞/i)
reg3[5] = new RegExp(/–Ω–æ–≤–æ—Å–µ–ª—å—Ü–µ–≤—É/i)
reg3[6] = new RegExp(/–Ω–æ–≤–æ—Å–µ–ª—å—Ü–µ–≤–µ/i)
reg3[7] = new RegExp(/–Ω–æ–≤–æ—Å–µ–ª—å—Ü–µ–≤—ã–º/i)
reg3[8] = new RegExp(/–Ω–æ–≤–æ—Å–∞/i)
reg3[9] = new RegExp(/–Ω–æ–≤–æ—Å–∞/i)
reg3[10] = new RegExp(/–Ω–æ–≤–æ—Å—É/i)
reg3[11] = new RegExp(/–Ω–æ–≤–æ—Å–µ/i)
reg3[12] = new RegExp(/–Ω–∞–≤–æ—Å–∞/i)
reg3[13] = new RegExp(/–Ω–∞–≤–æ—Å—É/i)
reg3[14] = new RegExp(/–Ω–∞–≤–æ—Å–µ/i)
reg3[15] = new RegExp(/–Ω–∞–≤–æ—Å–∞/i)
reg3[16] = new RegExp(/–Ω–∞–≤–æ—Å—É/i)
reg3[17] = new RegExp(/–Ω–∞–≤–æ–∑—É/i)
const answers3 = new Array(3)
answers3[0] = "–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´"
answers3[1] = "–ü–û–ú–ê–¶–ê–ô –üI–î –ú–ê–¢–†–ê–¶–ï–ú"
answers3[2] = "–ü—Ä–æ–¥–∞–º –ë—Ä–∞—Ç–∞. –î–æ—Ä–æ–≥–æ"
const random3 = answers3[Math.floor(Math.random() * answers3.length)]
updates.hear(reg3, async(context) => {
	await context.send(random3)
})


/*const reg4 = new Array(10)
reg4[0] = new RegExp(/—Ä—ã–∂–∏–π/i)
reg4[1] = new RegExp(/—Ä—ã–∂–µ–≥–æ/i)
reg4[2] = new RegExp(/—Ä—ã–∂–µ–º—É/i)
reg4[3] = new RegExp(/—Ä—ã–∂–∏–º/i)
reg4[4] = new RegExp(/–¥–∞–Ω—è/i)
reg4[5] = new RegExp(/–¥–∞–Ω–∏/i)
reg4[6] = new RegExp(/–¥–∞–Ω–µ/i)
reg4[7] = new RegExp(/–ø–æ–Ω–æ–º–∞—Ä—å/i)
reg4[8] = new RegExp(/–ø–æ–Ω–æ–º–∞—Ä–µ–≤/i)
reg4[9] = new RegExp(/–ø–æ–Ω–æ–º–∞—Ä–µ–≤–∞/i)
const answers4 = new Array(3)
answers4[0] = "–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´–´"
answers4[1] = "–ü–ê–¶–ê–ù–´ –ü–¢–£ –í–ê–©–ï –ó–ê–ï–ë–ò–°–¨, –í–°–ï–ú –°–û–í–ï–¢–£–Æ. –û–¢ –û–î–ù–û–ô –ü–ê–†–´ –ü–û–£–ú–ù–ï–õ –ù–ê 200 –•–ü"
answers4[2] = "–Ø –ù–ï –î–ê–ù–ò–ò–õ –°–¶–£–ö–ê"
const random4 = answers4[Math.floor(Math.random() * answers3.length)]
updates.hear(reg4, async(context) => {
	await context.send(random4)
})*/



updates.hear(/–≥–∞–Ω–∂/i, async(context) => {
	context.send('–¢—ã —Ä–∞–º—Å—ã –ø–æ–ø—É—Ç–∞–ª, –ø–µ—Å?')
})